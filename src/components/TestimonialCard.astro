---
/**
 * TestimonialCard.astro
 * Tarjeta de testimonio con estilo premium
 */

interface Props {
  name: string;
  text: string;
  image: string;
  role?: string;
  city?: string;
  rating?: number;
}

const basePath = (import.meta.env.BASE_URL || '/').replace(/\/$/, '');

const resolveImage = (src: string) => {
  if (!src) return '';
  if (/^(https?:)?\/\//.test(src) || src.startsWith('data:')) {
    return src;
  }
  const normalized = src.startsWith('/') ? src : `/${src}`;
  return `${basePath}${normalized}`;
};

const {
  name,
  text,
  image,
  role = 'Cliente',
  city,
  rating = 5,
} = Astro.props;

const avatarSrc = resolveImage(image);
---

<article class="relative overflow-hidden rounded-3xl border border-yellow-500/20 bg-white p-8 shadow-card transition-all duration-300 hover:-translate-y-2 hover:shadow-brand">
  <div class="absolute top-6 right-6 text-yellow-200">
    <svg class="h-12 w-12" viewBox="0 0 24 24" fill="currentColor">
      <path d="M14.017 21v-7.391c0-5.704 3.731-9.57 8.983-10.609l.995 2.151c-2.432.917-3.995 3.638-3.995 5.849h4v10h-9.983zm-14.017 0v-7.391c0-5.704 3.748-9.57 9-10.609l.996 2.151c-2.433.917-3.996 3.638-3.996 5.849h3.983v10h-9.983z" />
    </svg>
  </div>

  <div class="flex gap-1 mb-4">
    {Array.from({ length: 5 }).map((_, idx) => (
      <svg
        class={`h-5 w-5 ${idx < rating ? 'text-yellow-400' : 'text-neutral-300'}`}
        viewBox="0 0 20 20"
        fill="currentColor"
      >
        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
      </svg>
    ))}
  </div>

  <p class="mb-6 text-neutral-700 leading-relaxed italic">
    “{text}”
  </p>

  <div class="flex items-center gap-4 border-t border-neutral-200 pt-4">
    <img
      src={avatarSrc}
      alt={name}
      class="h-12 w-12 md:h-14 md:w-14 rounded-full object-cover ring-2 ring-yellow-500/40"
      loading="lazy"
      decoding="async"
    />
    <div>
      <h4 class="text-lg font-semibold text-neutral-900">{name}</h4>
      <p class="text-sm text-neutral-600">{role}</p>
      {city && (
        <p class="text-xs text-neutral-500 mt-1 flex items-center gap-1">
          <svg class="h-3 w-3" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path stroke-linecap="round" stroke-linejoin="round" d="M12 21c-3.866-3.133-7-7.224-7-10.5a7 7 0 1114 0c0 3.276-3.134 7.367-7 10.5z" />
            <circle cx="12" cy="10" r="3" />
          </svg>
          {city}
        </p>
      )}
    </div>
  </div>
</article>
